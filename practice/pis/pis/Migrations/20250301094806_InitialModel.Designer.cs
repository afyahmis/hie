// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pis.Data;

#nullable disable

namespace pis.Migrations
{
    [DbContext(typeof(PisDbContext))]
    [Migration("20250301094806_InitialModel")]
    partial class InitialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("pis.Domain.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("pis.Domain.Drug", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("QuantityInStock")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Drugs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a213286-9830-48ec-b6ed-610f341f451a"),
                            Code = "D101",
                            Name = "Diethylcarbamazine (citrate) Tablet 100mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("1725fe0a-4c0b-4fe1-9395-fd1c05dfa750"),
                            Code = "D102",
                            Name = "Praziquantel Tablet, Film-coated 600mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("e8725ab5-b927-4ae6-8b02-0a5c4c799a5e"),
                            Code = "D103",
                            Name = "Albendazole Tablet 400mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("9a1d53a2-1ca6-4d50-b0b9-f2304f8383e7"),
                            Code = "D104",
                            Name = "Mebendazole Tablets, Chewable 500mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("f345a67e-5efb-4207-ae2b-fa2ef97520fd"),
                            Code = "D105",
                            Name = "Ivermectin Tablet 3mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("b2ffceed-7dac-4bb2-8051-f8ad3e65c462"),
                            Code = "D106",
                            Name = "Ivermectin Tablet 6mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("2aee5d6b-7777-4927-974e-c9a88bfee23b"),
                            Code = "D107",
                            Name = "Praziquantel Tablet, Film-coated 600mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("688e78ac-afef-490d-9281-7ebe59d18aad"),
                            Code = "D108",
                            Name = "Albendazole Tablets, Chewable 400mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("69941033-ce0b-4cc5-af2d-1b64b1e61f4a"),
                            Code = "D109",
                            Name = "Praziquantel Tablet, Film-coated 600mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("c6e1e45f-80d2-4f86-aa92-05df7b0333d1"),
                            Code = "D110",
                            Name = "Albendazole Tablets, Chewable 200mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("e8f09582-31f1-4b60-9d46-ff045b0665ba"),
                            Code = "D111",
                            Name = "Albendazole Tablets, Chewable 100mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("04f73242-74a0-492d-b24b-63cbd788f086"),
                            Code = "D112",
                            Name = "Miltefosine Capsules, hard 50mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("45d5d579-de45-4dcb-b9e5-460f267d7085"),
                            Code = "D113",
                            Name = "Azithromycin Tablet, Film-coated 500mg",
                            QuantityInStock = 500.0
                        },
                        new
                        {
                            Id = new Guid("cdfec3c5-b141-4939-a101-5a240810e0c5"),
                            Code = "D114",
                            Name = "Levonorgestrel Tablet, coated 30mcg",
                            QuantityInStock = 500.0
                        });
                });

            modelBuilder.Entity("pis.Domain.MedicationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DispenseDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DispenseDrugId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PrescriptionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrescriptionDrug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrescriptionDrugCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("pis.Domain.MedicationRequest", b =>
                {
                    b.HasOne("pis.Domain.Client", null)
                        .WithMany("Requests")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pis.Domain.Client", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
