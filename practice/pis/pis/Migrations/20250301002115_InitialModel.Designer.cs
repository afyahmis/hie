// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pis.Data;

#nullable disable

namespace pis.Migrations
{
    [DbContext(typeof(PisDbContext))]
    [Migration("20250301002115_InitialModel")]
    partial class InitialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("pis.Domain.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("pis.Domain.Drug", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("QuantityInStock")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Drugs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44a14375-899b-42af-9a3b-76b9e805c0de"),
                            Code = "D101",
                            Name = "Diethylcarbamazine (citrate) Tablet 100mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4780)
                        },
                        new
                        {
                            Id = new Guid("b691d1eb-2020-4f15-812b-7ab6c2af24d4"),
                            Code = "D102",
                            Name = "Praziquantel Tablet, Film-coated 600mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4811)
                        },
                        new
                        {
                            Id = new Guid("ea19e9f9-b7e0-41f1-a624-1084a959e2ff"),
                            Code = "D103",
                            Name = "Albendazole Tablet 400mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4911)
                        },
                        new
                        {
                            Id = new Guid("90a46328-b1f1-4654-883f-2af18ace836c"),
                            Code = "D104",
                            Name = "Mebendazole Tablets, Chewable 500mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4913)
                        },
                        new
                        {
                            Id = new Guid("332814e6-d15e-4e2d-8f8a-f4e8c330e409"),
                            Code = "D105",
                            Name = "Ivermectin Tablet 3mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4914)
                        },
                        new
                        {
                            Id = new Guid("f1b1e424-6767-4c4d-80fa-a4ecca13a8be"),
                            Code = "D106",
                            Name = "Ivermectin Tablet 3mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4915)
                        },
                        new
                        {
                            Id = new Guid("3e1762e2-3c53-46aa-ab0d-4b9902befb5b"),
                            Code = "D107",
                            Name = "Praziquantel Tablet, Film-coated 600mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4919)
                        },
                        new
                        {
                            Id = new Guid("88baedfc-2558-4f4f-a25c-ebba4ac8c09f"),
                            Code = "D108",
                            Name = "Albendazole Tablets, Chewable 400mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4946)
                        },
                        new
                        {
                            Id = new Guid("c56b4f97-48e8-42f5-bf1b-4167997dbc70"),
                            Code = "D109",
                            Name = "Praziquantel Tablet, Film-coated 600mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4948)
                        },
                        new
                        {
                            Id = new Guid("eac51b5a-a01c-4775-96fb-615b8b2cd4bb"),
                            Code = "D110",
                            Name = "Albendazole Tablets, Chewable 400mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4949)
                        },
                        new
                        {
                            Id = new Guid("2c1b4f36-b224-49d0-8759-bff5b24e2e8c"),
                            Code = "D111",
                            Name = "Albendazole Tablets, Chewable 400mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4950)
                        },
                        new
                        {
                            Id = new Guid("24b4da21-9ae6-4f07-8ef2-f45468ea8075"),
                            Code = "D112",
                            Name = "Miltefosine Capsules, hard 50mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4952)
                        },
                        new
                        {
                            Id = new Guid("020b9967-9099-4e7a-8592-f4c30eb6787d"),
                            Code = "D113",
                            Name = "Azithromycin Tablet, Film-coated 500mg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4953)
                        },
                        new
                        {
                            Id = new Guid("e26c0632-8f7a-4bbd-94db-f1ed3fa123ad"),
                            Code = "D114",
                            Name = "Levonorgestrel Tablet, coated 30mcg",
                            QuantityInStock = 500.0,
                            Updated = new DateTime(2025, 3, 1, 3, 21, 15, 363, DateTimeKind.Local).AddTicks(4954)
                        });
                });

            modelBuilder.Entity("pis.Domain.MedicationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DispenseDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DispenseDrugId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PrescriptionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrescriptionDrug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("pis.Domain.MedicationRequest", b =>
                {
                    b.HasOne("pis.Domain.Client", null)
                        .WithMany("Requests")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pis.Domain.Client", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
