// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using emr.Data;

#nullable disable

namespace emr.Migrations
{
    [DbContext(typeof(EmrDbContext))]
    partial class EmrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("emr.Domain.DrugDispense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("DispenseRef")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Drug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrescriptionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PrescriptionId");

                    b.ToTable("DrugDispenses");
                });

            modelBuilder.Entity("emr.Domain.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClinicNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52db76d5-fd3d-4774-90de-7f049cdba178"),
                            BirthDate = new DateTime(1990, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClinicNo = "J01",
                            Name = "John Doe",
                            Sex = "M"
                        },
                        new
                        {
                            Id = new Guid("adc4bd75-d76d-47d5-aba3-6b5a75146860"),
                            BirthDate = new DateTime(1992, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClinicNo = "M03",
                            Name = "Mary Jane",
                            Sex = "F"
                        },
                        new
                        {
                            Id = new Guid("f444520d-0ae6-4cb5-8e8a-86aeddc18453"),
                            BirthDate = new DateTime(2020, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClinicNo = "A02",
                            Name = "Ali Jones",
                            Sex = "M"
                        });
                });

            modelBuilder.Entity("emr.Domain.Prescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Drug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("emr.Domain.DrugDispense", b =>
                {
                    b.HasOne("emr.Domain.Prescription", null)
                        .WithMany("Dispenses")
                        .HasForeignKey("PrescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("emr.Domain.Prescription", b =>
                {
                    b.HasOne("emr.Domain.Patient", null)
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("emr.Domain.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("emr.Domain.Prescription", b =>
                {
                    b.Navigation("Dispenses");
                });
#pragma warning restore 612, 618
        }
    }
}
